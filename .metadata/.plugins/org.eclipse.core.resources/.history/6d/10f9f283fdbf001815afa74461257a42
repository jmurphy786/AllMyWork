package com.qa.RestPractice;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import io.restassured.response.ValidatableResponse;
import io.restassured.specification.RequestSpecification;

import static io.restassured.RestAssured.*;
import static io.restassured.matcher.RestAssuredMatchers.*;
import static org.hamcrest.Matchers.*;
import static io.restassured.module.jsv.JsonSchemaValidator.*;

import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;

public class TestCucumber {
	
	private Response response;
	private ValidatableResponse json;
	private RequestSpecification request;
	private String url;
	
	@Given("^a film exists with the Title Guardians of the Galaxy Two$")
	public void a_film_exists_with_the_Title_Guardians_of_the_Galaxy_Two() throws Throwable {
        given()
		.contentType(ContentType.JSON)
		.when()
		.get("http://www.omdbapi.com/?t=\r\n" + 
				"Guardians of the Galaxy: Vol. 2&apikey=49a31895")
		.then().statusCode(200);
	}

	@When("^a user retrieves the film by the title Guardians of the Galaxy Two$")
	public void a_user_retrieves_the_film_by_the_title_Guardians_of_the_Galaxy_Two() throws Throwable {
	    request = given().contentType(ContentType.JSON);
		response = request.when().get("http://www.omdbapi.com/?t=\r\n" + 
				"Guardians of the Galaxy: Vol. 2&apikey=49a31895");

	}

	@Then("^the status code reads (\\d+)$")
	public void the_status_code_reads(int arg1) throws Throwable {
	    System.out.println("response: " + response.prettyPrint());
	}

	@Given("^a film exists with the Title IT$")
	public void a_film_exists_with_the_Title_IT() throws Throwable {
         given()
		.contentType(ContentType.JSON)
		.when()
		.get("http://www.omdbapi.com/?t=It&apikey=49a31895")
		.then().statusCode(200);
	}

	@When("^a user retrieves the film by the title IT$")
	public void a_user_retrieves_the_film_by_the_title_IT() throws Throwable {
	    request = given().contentType(ContentType.JSON);
		response = request.when().get("http://www.omdbapi.com/?t=It&apikey=49a31895");
	}

	@Then("^the Rated Field is equal to R$")
	public void the_Rated_Field_is_equal_to_R() throws Throwable {
	     given()
		.contentType(ContentType.JSON)
		.when()
		.get("http://www.omdbapi.com/?t=Spongebob&y=2011&apikey=49a31895")
		.then().statusCode(200)
		.body("Rated", equalTo("R"));
	}

	@Given("^a film exists with the Title \"([^\"]*)\"$")
	public void a_film_exists_with_the_Title(String arg1) throws Throwable {
		 url = "http://www.omdbapi.com/?t=" + arg1 + "&apikey=49a31895";
         given()
		.contentType(ContentType.JSON)
		.when()
		.get("http://www.omdbapi.com/?t=" + arg1 + "&apikey=49a31895")
		.then().statusCode(200);
	}

	@When("^a user retrieves the film by the title \"([^\"]*)\"$")
	public void a_user_retrieves_the_film_by_the_title(String arg1) throws Throwable {
	    request = given().contentType(ContentType.JSON);
		response = request.when().get("http://www.omdbapi.com/?t=" + arg1 + "&apikey=49a31895");
	}

	@Then("^the Rated Field is equal to \"([^\"]*)\"$")
	public void the_Rated_Field_is_equal_to(String arg1) throws Throwable {
	     given()
		.contentType(ContentType.JSON)
		.when()
		.get(url)
		.then().statusCode(200)
		.body("Rated", equalTo(arg1));
	}


}
